//========= Copyright Â© 1996-2002, Valve LLC, All rights reserved. ============
//
// Purpose: 
//
// $NoKeywords: $
//=============================================================================
#pragma once
#if !defined(DOD_SHARED_H)
#define DOD_SHARED_H

struct p_wpninfo_s
{
    char pmodel[32];
    char vmodel[32];
    char wmodel[32];
    char leftreload[32];
    char bipodup[32];
    char bipoddown[32];
    char sandbagreload[32];
    char pronereload[32];
    char szAnimExt[16];
    char szAnimReloadExt[16];

    float anim_reloadtime;
    float anim_firedelay;
    float anim_reloadtime2;
    float anim_firetime2;
    float anim_drawtime;
    float anim_up2downtime;
    float anim_down2uptime;
    float base_accuracy;
    float accuracy_penalty;
    float base_accuracy2;

    int ammo_default;
    int ammo_maxcarry;
    int ammo_maxclip;
    int ammo_give;
    int misc_weight;
};

enum HANDSIGNALS_e 
{
    HS_STICK_TOGETHER = 0,
    HS_FALL_BACK,
    HS_NO_SIR,
    HS_YES_SIR,
    HS_SNIPER,
    HS_BACKUP,
    HS_ENEMY_RIGHT,
    HS_ENEMY_LEFT,
    HS_GRENADE,
    HS_FLANK_LEFT,
    HS_MOVE_OUT,
    HS_FLANK_RIGHT,
    HS_AREA_CLEAR,
    HS_COVERING_FIRE,
    HS_TAKE_COVER,
    HS_HOLD_POSITION,
    HS_SPREAD_OUT,
    HS_ENEMY_SPOTTED,
    HS_DISPLACE,
    HS_PREPARE,
    HS_GOGOGO,
    HS_ENEMY_AHEAD,
    HS_ENEMY_BEHIND,
    HS_MG_AHEAD,
    HS_MG_MOVEUP,
    HS_CEASE_FIRE,
    HS_IDLE2,
    HS_IDLE3,
    HS_IDLE4,
    HS_IDLE5,
};

// bullet types
typedef	enum
{
	BULLET_NONE = 0,
	BULLET_PLAYER_9MM,
	BULLET_PLAYER_MP5,
	BULLET_PLAYER_357,
	BULLET_PLAYER_BUCKSHOT,
	BULLET_PLAYER_CROWBAR,

	BULLET_PLAYER_COLT,
	BULLET_PLAYER_LUGER,
	BULLET_PLAYER_GARAND,
	BULLET_PLAYER_SCOPEDKAR,
	BULLET_PLAYER_THOMPSON,
	BULLET_PLAYER_MP44,
    BULLET_PLAYER_SPRING,
	BULLET_PLAYER_KAR,
	BULLET_PLAYER_BAR,
	BULLET_PLAYER_MP40,
	BULLET_PLAYER_MG42,
	BULLET_PLAYER_MG34,
	BULLET_PLAYER_30CAL,
	BULLET_PLAYER_M1CARBINE,
	BULLET_PLAYER_GREASEGUN,
	BULLET_PLAYER_FG42,
	BULLET_PLAYER_K43,
	BULLET_PLAYER_ENFIELD,
    BULLET_PLAYER_STEN,
	BULLET_PLAYER_BREN,
	BULLET_PLAYER_WEBLEY,

	BULLET_MONSTER_9MM,
	BULLET_MONSTER_MP5,
	BULLET_MONSTER_12MM
} Bullet;

enum KNIFE_e 
{
    KNIFE_IDLE = 0,
    KNIFE_SLASH1,
    KNIFE_SLASH2,
    KNIFE_DRAW
};

enum GREASEGUN_e 
{
    GREASEGUN_IDLE = 0,
    GREASEGUN_RELOAD,
    GREASEGUN_DRAW,
    GREASEGUN_SHOOT1,
    GREASEGUN_SHOOT2,
    GREASEGUN_IDLE_EMPTY,
    GREASEGUN_FAST_DRAW
};

enum CAL30_e 
{
    CAL30_UPIDLE = 0,
    CAL30_UPIDLE8,
    CAL30_UPIDLE7,
    CAL30_UPIDLE6,
    CAL30_UPIDLE5,
    CAL30_UPIDLE4,
    CAL30_UPIDLE3,
    CAL30_UPIDLE2,
    CAL30_UPIDLE1,
    CAL30_UPIDLEEMPTY,
    CAL30_DOWNIDLE,
    CAL30_DOWNIDLE8,
    CAL30_DOWNIDLE7,
    CAL30_DOWNIDLE6,
    CAL30_DOWNIDLE5,
    CAL30_DOWNIDLE4,
    CAL30_DOWNIDLE3,
    CAL30_DOWNIDLE2,
    CAL30_DOWNIDLE1,
    CAL30_DOWNIDLEEMPTY,
    CAL30_DOWNTOUP,
    CAL30_DOWNTOUP8,
    CAL30_DOWNTOUP7,
    CAL30_DOWNTOUP6,
    CAL30_DOWNTOUP5,
    CAL30_DOWNTOUP4,
    CAL30_DOWNTOUP3,
    CAL30_DOWNTOUP2,
    CAL30_DOWNTOUP1,
    CAL30_DOWNTOUPEMPTY,
    CAL30_UPTODOWN,
    CAL30_UPTODOWN8,
    CAL30_UPTODOWN7,
    CAL30_UPTODOWN6,
    CAL30_UPTODOWN5,
    CAL30_UPTODOWN4,
    CAL30_UPTODOWN3,
    CAL30_UPTODOWN2,
    CAL30_UPTODOWN1,
    CAL30_UPTODOWNEMPTY,
    CAL30_UPSHOOT,
    CAL30_UPSHOOT8,
    CAL30_UPSHOOT7,
    CAL30_UPSHOOT6,
    CAL30_UPSHOOT5,
    CAL30_UPSHOOT4,
    CAL30_UPSHOOT3,
    CAL30_UPSHOOT2,
    CAL30_UPSHOOT1,
    CAL30_DOWNSHOOT,
    CAL30_DOWNSHOOT8,
    CAL30_DOWNSHOOT7,
    CAL30_DOWNSHOOT6,
    CAL30_DOWNSHOOT5,
    CAL30_DOWNSHOOT4,
    CAL30_DOWNSHOOT3,
    CAL30_DOWNSHOOT2,
    CAL30_DOWNSHOOT1,
    CAL30_RELOAD
};

enum BAR_e 
{
    BAR_UP_IDLE = 0,
    BAR_UP_RELOAD,
    BAR_UP_DRAW,
    BAR_UP_SHOOT,
    BAR_UP_TO_DOWN,
    BAR_DOWN_IDLE,
    BAR_DOWN_RELOAD,
    BAR_DOWN_SHOOT,
    BAR_DOWN_TO_UP
};

enum BREN_e 
{
    BREN_UP_IDLE = 0,
    BREN_UP_RELOAD,
    BREN_UP_DRAW,
    BREN_UP_SHOOT,
    BREN_UP_TO_DOWN,
    BREN_DOWN_IDLE,
    BREN_DOWN_RELOAD,
    BREN_DOWN_SHOOT,
    BREN_DOWN_TO_UP
};

enum COLT_e
{
    COLT_IDLE = 0,
    COLT_SHOOT,
    COLT_SHOOT2,
    COLT_RELOAD_EMPTY,
    COLT_RELOAD,
    COLT_DRAW,
    COLT_SHOOT_EMPTY,
    COLT_IDLE_EMPTY
};

enum ENFIELD_e
{
    ENFIELD_IDLE = 0,
    ENFIELD_SHOOT,
    ENFIELD_RELOAD,
    ENFIELD_DRAW,
    ENFIELD_RELOADLONG,
    ENFIELD_SWING
};

enum SCOPEDENFIELD_e
{
    SCOPEDENFIELD_IDLE = 0,
    SCOPEDENFIELD_SHOOT,
    SCOPEDENFIELD_RELOAD,
    SCOPEDENFIELD_DRAW,
    SCOPEDENFIELD_RELOADLONG
};

enum FG42_e
{
    FG42_UP_IDLE = 0,
    FG42_UP_RELOAD,
    FG42_UP_DRAW,
    FG42_UP_SHOOT,
    FG42_UP_TO_DOWN,
    FG42_DOWN_IDLE,
    FG42_DOWN_RELOAD,
    FG42_DOWN_SHOOT,
    FG42_DOWN_TO_UP,
    FG42_LOWER_FOR_ZOOM
};

enum GARAND_e
{
    GARAND_IDLE = 0,
    GARAND_SHOOT1,
    GARAND_SHOOT2,
    GARAND_SHOOT3,
    GARAND_SHOOT_EMPTY,
    GARAND_RELOAD,
    GARAND_DRAW,
    GARAND_IDLE_EMPTY,
    GARAND_DRAW_EMPTY,
    GARAND_SMASH,
    GARAND_SMASH_EMPTY
};

enum K43_e
{
    K43_IDLE,
    K43_SHOOT1,
    K43_SHOOT2,
    K43_RELOAD,
    K43_DRAW,
    K43_SHOOT_EMPTY,
    K43_SMASH
};

enum KAR_e
{
    KAR_IDLE = 0,
    KAR_SHOOT,
    KAR_RELOAD,
    KAR_DRAW,
    KAR_SWING,
    KAR_SLASH
};

enum LUGER_e
{
    LUGER_IDLE = 0,
    LUGER_IDLE2,
    LUGER_IDLE3,
    LUGER_SHOOT,
    LUGER_SHOOT_EMPTY,
    LUGER_RELOAD_EMPTY,
    LUGER_RELOAD,
    LUGER_DRAW,
    LUGER_IDLE_EMPTY
};

enum M1CARBINE_e
{
    M1CARBINE_IDLE = 0,
    M1CARBINE_RELOAD,
    M1CARBINE_DRAW,
    M1CARBINE_SHOOT,
    M1CARBINE_FAST_DRAW
};

enum MG34_e
{
    MG34_DOWNIDLE = 0,
    MG34_DOWNIDLEEMPTY,
    MG34_DOWNTOUP,
    MG34_DOWNTOUPEMPTY,
    MG34_DOWNSHOOT,
    MG34_DOWNSHOOTEMPTY,
    MG34_UPIDLE,
    MG34_UPIDLEEMPTY,
    MG34_UPTODOWN,
    MG34_UPTODOWNEMPTY,
    MG34_UPSHOOT,
    MG34_UPSHOOTEMPTY,
    MG34_RELOAD
};

enum MG42_e
{
    MG42_UPIDLE = 0,
    MG42_UPIDLE8,
    MG42_UPIDLE7,
    MG42_UPIDLE6,
    MG42_UPIDLE5,
    MG42_UPIDLE4,
    MG42_UPIDLE3,
    MG42_UPIDLE2,
    MG42_UPIDLE1,
    MG42_UPIDLEEMPTY,
    MG42_DOWNIDLE,
    MG42_DOWNIDLE8,
    MG42_DOWNIDLE7,
    MG42_DOWNIDLE6,
    MG42_DOWNIDLE5,
    MG42_DOWNIDLE4,
    MG42_DOWNIDLE3,
    MG42_DOWNIDLE2,
    MG42_DOWNIDLE1,
    MG42_DOWNIDLEEMPTY,
    MG42_DOWNTOUP,
    MG42_DOWNTOUP8,
    MG42_DOWNTOUP7,
    MG42_DOWNTOUP6,
    MG42_DOWNTOUP5,
    MG42_DOWNTOUP4,
    MG42_DOWNTOUP3,
    MG42_DOWNTOUP2,
    MG42_DOWNTOUP1,
    MG42_DOWNTOUPEMPTY,
    MG42_UPTODOWN,
    MG42_UPTODOWN8,
    MG42_UPTODOWN7,
    MG42_UPTODOWN6,
    MG42_UPTODOWN5,
    MG42_UPTODOWN4,
    MG42_UPTODOWN3,
    MG42_UPTODOWN2,
    MG42_UPTODOWN1,
    MG42_UPTODOWNEMPTY,
    MG42_UPSHOOT,
    MG42_UPSHOOT8,
    MG42_UPSHOOT7,
    MG42_UPSHOOT6,
    MG42_UPSHOOT5,
    MG42_UPSHOOT4,
    MG42_UPSHOOT3,
    MG42_UPSHOOT2,
    MG42_UPSHOOT1,
    MG42_DOWNSHOOT,
    MG42_DOWNSHOOT8,
    MG42_DOWNSHOOT7,
    MG42_DOWNSHOOT6,
    MG42_DOWNSHOOT5,
    MG42_DOWNSHOOT4,
    MG42_DOWNSHOOT3,
    MG42_DOWNSHOOT2,
    MG42_DOWNSHOOT1,
    MG42_RELOAD
};

enum MP40_e
{
    MP40_IDLE = 0,
    MP40_RELOAD,
    MP40_DRAW,
    MP40_SHOOT1,
    MP40_SHOOT2,
    MP40_IDLEEMPTY
};

enum MP44_e
{
    MP44_IDLE = 0,
    MP44_RELOAD,
    MP44_DRAW,
    MP44_SHOOT1
};

enum SCOPEDKAR_e
{
    SCOPEDKAR_IDLE = 0,
    SCOPEDKAR_SHOOT,
    SCOPEDKAR_RELOAD,
    SCOPEDKAR_DRAW,
    SCOPEDKAR_STABSLASH,
    SCOPEDKAR_STAB,
    SCOPEDKAR_LOWER_FOR_ZOOM
};

enum SPRING_e
{
    SPRING_IDLE = 0,
    SPRING_SHOOT1,
    SPRING_SHOOT2,
    SPRING_RELOAD,
    SPRING_DRAW,
    SPRING_xxx,
    SPRING_LOWER_FOR_ZOOM
};

enum STEN_e
{
    STEN_IDLE = 0,
    STEN_RELOAD,
    STEN_DRAW,
    STEN_SHOOT
};

enum THOMPSON_e
{
    THOMPSON_IDLE = 0,
    THOMPSON_RELOAD,
    THOMPSON_DRAW,
    THOMPSON_SHOOT1,
    THOMPSON_SHOOT2,
    THOMPSON_IDLE_EMPTY,
    THOMPSON_PRONE_BACK,
    THOMPSON_PRONE_FORWARD,
    THOMPSON_PRONE_STILL
};

enum WEBLEY_e
{
    WEBLEY_IDLE = 0,
    WEBLEY_SHOOT,
    WEBLEY_RELOAD,
    WEBLEY_DRAW
};

enum handgrenade_e
{
    HANDGRENADE_IDLE = 0,
    HANDGRENADE_DRAW,
    HANDGRENADE_PINPULL,
    HANDGRENADE_HOLSTER,
    HANDGRENADE_THROW,
    HANDGRENADE_EX_IDLE,
    HANDGRENADE_EX_DRAW,
    HANDGRENADE_EX_PINPULL,
    HANDGRENADE_EX_THROW
};

enum stickgrenade_e
{
    STICKGRENADE_IDLE = 0,
    STICKGRENADE_DRAW,
    STICKGRENADE_PINPULL,
    STICKGRENADE_HOLSTER,
    STICKGRENADE_THROW,
    STICKGRENADE_EX_IDLE,
    STICKGRENADE_EX_DRAW,
    STICKGRENADE_EX_PINPULL,
    STICKGRENADE_EX_THROW
};

enum BAZOOKA_e
{
    BAZOOKA_IDLE = 0,
    BAZOOKA_DRAW,
    BAZOOKA_AIMED,
    BAZOOKA_FIRE,
    BAZOOKA_RAISE,
    BAZOOKA_LOWER,
    BAZOOKA_RELOAD_AIMED,
    BAZOOKA_RELOAD_IDLE
};

enum PIAT_e
{
    PIAT_IDLE = 0,
    PIAT_IDLE_EMPTY,
    PIAT_DRAW,
    PIAT_DRAW_EMPTY,
    PIAT_AIMED,
    PIAT_AIMED_EMPTY,
    PIAT_FIRE,
    PIAT_RAISE,
    PIAT_RAISE_EMPTY,
    PIAT_LOWER,
    PIAT_LOWER_EMPTY,
    PIAT_RELOAD_IDLE,
    PIAT_RELOAD_AIMED
};

enum PSCHRECK_e
{
    PSCHRECK_IDLE = 0,
    PSCHRECK_DRAW,
    PSCHRECK_AIMED,
    PSCHRECK_FIRE,
    PSCHRECK_RAISE,
    PSCHRECK_LOWER,
    PSCHRECK_RELOAD_AIMED,
    PSCHRECK_RELOAD_IDLE
};

typedef struct DodClassInfo_s
{
    char selectcmd[32];
    char classname[128];
    char modelname[128];
    char limitcvar[32];

    int team;
    int speed;
    int weapons;
    int weapons2;
    int numgrenades;
    int armskin;
    int headgroup;
    int helmetgroup;
    int geargroup;
    int bodygroup;
    int hairgroup;
} DodClassInfo_t;

#endif // DOD_SHARED_H
